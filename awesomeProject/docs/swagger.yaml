definitions:
  models.Book:
    properties:
      author:
        type: string
      id:
        type: integer
      name:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      age:
        type: integer
      books:
        items:
          $ref: '#/definitions/models.Book'
        type: array
      id:
        type: integer
      name:
        type: string
      since:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /user:
    post:
      consumes:
      - application/json
      description: Add a user to the database
      operationId: add-user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          headers:
            Location:
              description: Location of the created user
              type: string
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Add a user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: delete user by ID
      operationId: delete-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: We need ID!!
          schema:
            type: string
        "404":
          description: Can not find ID
          schema:
            type: string
      summary: Delete a user
    get:
      consumes:
      - application/json
      description: get string by ID
      operationId: get-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: We need ID!!
          schema:
            type: string
        "404":
          description: Can not find ID
          schema:
            type: string
      summary: Show a user
    put:
      consumes:
      - application/json
      description: Update user details by ID
      operationId: update-user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid user ID or data
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
  /user/all:
    get:
      description: Get a list of all users
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
  /user/all/books:
    get:
      description: Get a list of all users and their books
      operationId: get-all
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users by their books
swagger: "2.0"
